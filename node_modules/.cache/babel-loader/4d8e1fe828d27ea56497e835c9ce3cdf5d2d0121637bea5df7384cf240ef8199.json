{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yann\\\\Documents\\\\Formation-Open-Classrooms\\\\Projet 5_kasa\\\\kasa\\\\src\\\\components\\\\Collapse.jsx\",\n  _s = $RefreshSig$();\n// Importation des dépendances nécessaires\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../style/collapse.scss\";\n\n// Définition du composant Collapse\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Collapse({\n  title,\n  content\n}) {\n  _s();\n  // Utilisation du Hook useState pour gérer l'état de l'affichage du contenu\n  const [toggle, setToggle] = useState(false);\n\n  // Rendu du composant\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse\",\n      children: [\"// Affichage du titre et de l'ic\\xF4ne qui permet de montrer/cacher le contenu\", /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"collapse_title\",\n        onClick: () => setToggle(!toggle),\n        children: [title, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faChevronUp\n          // Rotation de l'icône en fonction de l'état de l'affichage du contenu\n          ,\n          className: `arrow ${toggle ? \"rotateDown\" : \"rotateUp\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: toggle ? \"collapse_content\" : \"collapse_content_hidden\",\n        children: Array.isArray(content) ? content.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 22\n          }, this);\n        }) :\n        /*#__PURE__*/\n        // Si le contenu n'est pas un tableau, il est affiché tel quel\n        _jsxDEV(\"p\", {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Collapse, \"KMOoc8w16Lq5ZnA3xKzfamBycFo=\");\n_c = Collapse;\nvar _c;\n$RefreshReg$(_c, \"Collapse\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faChevronUp","jsxDEV","_jsxDEV","Fragment","_Fragment","Collapse","title","content","_s","toggle","setToggle","children","className","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Yann/Documents/Formation-Open-Classrooms/Projet 5_kasa/kasa/src/components/Collapse.jsx"],"sourcesContent":["// Importation des dépendances nécessaires\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../style/collapse.scss\";\r\n\r\n// Définition du composant Collapse\r\nexport default function Collapse({ title, content }) {\r\n  // Utilisation du Hook useState pour gérer l'état de l'affichage du contenu\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  // Rendu du composant\r\n  return (\r\n    <>\r\n      <div className=\"collapse\">\r\n        // Affichage du titre et de l'icône qui permet de montrer/cacher le contenu \r\n        <h3 className=\"collapse_title\" onClick={() => setToggle(!toggle)}>\r\n          {title}\r\n          <FontAwesomeIcon\r\n            icon={faChevronUp}\r\n            // Rotation de l'icône en fonction de l'état de l'affichage du contenu\r\n            className={`arrow ${toggle ? \"rotateDown\" : \"rotateUp\"}`}\r\n          />\r\n        </h3>\r\n        {/* Affichage du contenu en fonction de l'état de l'affichage */}\r\n        <div\r\n          className={toggle ? \"collapse_content\" : \"collapse_content_hidden\"}\r\n        >\r\n          {/* Si le contenu est un tableau, chaque élément est affiché dans un paragraphe séparé */}\r\n          {Array.isArray(content) ? (\r\n            content.map((item, index) => {\r\n              return <p key={index}>{item}</p>;\r\n            })\r\n          ) : (\r\n            // Si le contenu n'est pas un tableau, il est affiché tel quel\r\n            <p>{content}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,OAAO,wBAAwB;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,eAAe,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACnD;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,oBACEI,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAKU,SAAS,EAAC,UAAU;MAAAD,QAAA,GAAC,gFAExB,eAAAT,OAAA;QAAIU,SAAS,EAAC,gBAAgB;QAACC,OAAO,EAAEA,CAAA,KAAMH,SAAS,CAAC,CAACD,MAAM,CAAE;QAAAE,QAAA,GAC9DL,KAAK,eACNJ,OAAA,CAACH,eAAe;UACde,IAAI,EAAEd;UACN;UAAA;UACAY,SAAS,EAAE,SAASH,MAAM,GAAG,YAAY,GAAG,UAAU;QAAG;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAELhB,OAAA;QACEU,SAAS,EAAEH,MAAM,GAAG,kBAAkB,GAAG,yBAA0B;QAAAE,QAAA,EAGlEQ,KAAK,CAACC,OAAO,CAACb,OAAO,CAAC,GACrBA,OAAO,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UAC3B,oBAAOrB,OAAA;YAAAS,QAAA,EAAgBW;UAAI,GAAZC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC;QAClC,CAAC,CAAC;QAAA;QAEF;QACAhB,OAAA;UAAAS,QAAA,EAAIJ;QAAO;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAChB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACV,EAAA,CAlCuBH,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}