{"ast":null,"code":"// Importation des dépendances nécessaires\nimport{useState}from\"react\";import Datas from\"../data/data\";import\"../style/slider.scss\";import\"../style/collapse.scss\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faChevronLeft,faChevronRight,faStar as fullStar}from\"@fortawesome/free-solid-svg-icons\";import{faStar as emptyStar}from\"@fortawesome/free-solid-svg-icons\";import{useParams,Navigate}from\"react-router-dom\";import Collapse from\"./Collapse\";// Définition du composant Slider\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Slider(){// J'utilise useParams pour extraire l'ID du logement à partir \n//des paramètres de l'URL\nconst{id}=useParams();// Je crée un tableau d'identifiants (ids) en parcourant les données (Datas)\n// et en extrayant l'ID de chaque élément\nconst ids=Datas.map(data=>data.id);// J'utilise la méthode indexOf pour trouver l'index de l'ID actuel dans\n// le tableau d'identifiants (ids)\n// Si l'ID n'est pas trouvé, indexOf retourne -1\nconst currentIndex=ids.indexOf(id);// J'utilise le Hook useState pour créer une variable d'état (index) et \n//initialiser sa valeur à currentIndex\nconst[index]=useState(currentIndex);// J'utilise le Hook useState pour créer une autre variable d'état \n//(imageIndex) qui représente l'index de l'image actuellement affichée\n// J'initialise imageIndex à 0, ce qui signifie que la première image \n//sera affichée par défaut\nconst[imageIndex,setImageIndex]=useState(0);// Si l'index est -1 (ce qui signifie que l'ID n'a pas été trouvé dans les \n//données), je renvoie un composant Navigate qui redirige l'utilisateur \n//vers la page d'erreur\nif(index===-1){return/*#__PURE__*/_jsx(Navigate,{to:\"/Error\"});}// Je crée un tableau d'images en extrayant le tableau de pictures de \n//l'élément actuel dans les données (Datas[index])\nconst images=[...Datas[index].pictures];// Je définis une fonction (nextImage) pour passer à l'image suivante dans \n//le diaporama\nconst nextImage=()=>{// J'utilise la fonction setImageIndex pour mettre à jour l'état imageIndex\nsetImageIndex(prevImageIndex=>{// Je calcule le nouvel index en ajoutant 1 à l'index de l'image \n//actuelle (prevImageIndex) et en utilisant l'opérateur modulo (%) \n//avec la longueur du tableau d'images\n// Cela permet de créer un effet de boucle dans le diaporama \n//(lorsque l'index atteint la fin du tableau d'images, il revient à 0)\nconst newIndex=(prevImageIndex+1)%images.length;// Je retourne le nouvel index qui sera utilisé pour mettre à jour \n//l'état imageIndex\nreturn newIndex;});};// Fonction pour passer à l'image précédente\nconst prevImage=()=>{// On met à jour l'index de l'image\nsetImageIndex(prevImageIndex=>{// On calcule le nouvel index pour revenir à l'image précédente\nconst newIndex=(prevImageIndex-1+images.length)%images.length;// On retourne le nouvel index\nreturn newIndex;});};// Composant pour afficher la note sous forme d'étoiles\nconst Rating=_ref=>{let{rating}=_ref;// Nombre total d'étoiles\nconst totalStars=5;// Tableau pour stocker les étoiles\nlet stars=[];// Boucle pour générer les étoiles\nfor(let i=0;i<totalStars;i++){// Si l'index est inférieur à la note, on ajoute une étoile remplie\nif(i<rating){stars.push(/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"star filled\",icon:fullStar},i));}else{// Sinon, on ajoute une étoile grise\nstars.push(/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"star empty\",icon:emptyStar},i));}}// On retourne un div contenant toutes les étoiles\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"rating\",children:stars});};// Rendu du composant\nreturn/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"slider\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"slider_img\",src:images[imageIndex],alt:Datas[index].title}),images.length>1&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"chevron chevron_left\",icon:faChevronLeft,onClick:prevImage}),/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"chevron chevron_right\",icon:faChevronRight,onClick:nextImage}),/*#__PURE__*/_jsxs(\"p\",{id:\"number\",children:[imageIndex+1,\"/\",images.length]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"slider-content-one\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"title\",children:/*#__PURE__*/_jsx(\"h2\",{children:Datas[index].title})}),/*#__PURE__*/_jsx(\"p\",{id:\"location\",children:Datas[index].location}),/*#__PURE__*/_jsx(\"div\",{id:\"tag\",children:Datas[index].tags.map((tag,i)=>/*#__PURE__*/_jsx(\"p\",{id:\"tag_name\",children:tag},i))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"slider-content-two\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"identity\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"host_name\",children:Datas[index].host.name.split(\" \").map((part,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"host_name_part\",children:part},i))}),/*#__PURE__*/_jsx(\"div\",{id:\"rond\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rating\",children:[\" \",/*#__PURE__*/_jsx(Rating,{rating:Datas[index].rating})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"collapse_slider\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"collapse_slider_item1\",children:/*#__PURE__*/_jsx(Collapse,{title:\"Description\",content:Datas[index].description})}),/*#__PURE__*/_jsx(\"div\",{className:\"collapse_slider_item2\",children:/*#__PURE__*/_jsx(Collapse,{title:\"Équipements\",content:Datas[index].equipments})})]})]});}","map":{"version":3,"names":["useState","Datas","FontAwesomeIcon","faChevronLeft","faChevronRight","faStar","fullStar","emptyStar","useParams","Navigate","Collapse","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Slider","id","ids","map","data","currentIndex","indexOf","index","imageIndex","setImageIndex","to","images","pictures","nextImage","prevImageIndex","newIndex","length","prevImage","Rating","_ref","rating","totalStars","stars","i","push","className","icon","children","src","alt","title","onClick","location","tags","tag","host","name","split","part","content","description","equipments"],"sources":["C:/Users/Yann/Documents/Formation-Open-Classrooms/Projet_ 5_kasa/kasa/src/components/Slider.jsx"],"sourcesContent":["// Importation des dépendances nécessaires\r\nimport { useState } from \"react\";\r\nimport Datas from \"../data/data\";\r\nimport \"../style/slider.scss\";\r\nimport \"../style/collapse.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faStar as fullStar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStar as emptyStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useParams, Navigate } from \"react-router-dom\";\r\nimport Collapse from \"./Collapse\";\r\n\r\n// Définition du composant Slider\r\nexport default function Slider() {\r\n  // J'utilise useParams pour extraire l'ID du logement à partir \r\n  //des paramètres de l'URL\r\n  const { id } = useParams();\r\n\r\n  // Je crée un tableau d'identifiants (ids) en parcourant les données (Datas)\r\n  // et en extrayant l'ID de chaque élément\r\n  const ids = Datas.map((data) => data.id);\r\n\r\n  // J'utilise la méthode indexOf pour trouver l'index de l'ID actuel dans\r\n  // le tableau d'identifiants (ids)\r\n  // Si l'ID n'est pas trouvé, indexOf retourne -1\r\n  const currentIndex = ids.indexOf(id);\r\n\r\n  // J'utilise le Hook useState pour créer une variable d'état (index) et \r\n  //initialiser sa valeur à currentIndex\r\n  const [index] = useState(currentIndex); \r\n\r\n  // J'utilise le Hook useState pour créer une autre variable d'état \r\n  //(imageIndex) qui représente l'index de l'image actuellement affichée\r\n  // J'initialise imageIndex à 0, ce qui signifie que la première image \r\n  //sera affichée par défaut\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n\r\n  // Si l'index est -1 (ce qui signifie que l'ID n'a pas été trouvé dans les \r\n  //données), je renvoie un composant Navigate qui redirige l'utilisateur \r\n  //vers la page d'erreur\r\n  if (index === -1) {\r\n    return <Navigate to=\"/Error\" />;\r\n  }\r\n\r\n  // Je crée un tableau d'images en extrayant le tableau de pictures de \r\n  //l'élément actuel dans les données (Datas[index])\r\n  const images = [...Datas[index].pictures];\r\n\r\n  // Je définis une fonction (nextImage) pour passer à l'image suivante dans \r\n  //le diaporama\r\n  const nextImage = () => {\r\n    // J'utilise la fonction setImageIndex pour mettre à jour l'état imageIndex\r\n    setImageIndex((prevImageIndex) => {\r\n      // Je calcule le nouvel index en ajoutant 1 à l'index de l'image \r\n      //actuelle (prevImageIndex) et en utilisant l'opérateur modulo (%) \r\n      //avec la longueur du tableau d'images\r\n      // Cela permet de créer un effet de boucle dans le diaporama \r\n      //(lorsque l'index atteint la fin du tableau d'images, il revient à 0)\r\n      const newIndex = (prevImageIndex + 1) % images.length;\r\n\r\n      // Je retourne le nouvel index qui sera utilisé pour mettre à jour \r\n      //l'état imageIndex\r\n      return newIndex;\r\n  });\r\n};\r\n  \r\n// Fonction pour passer à l'image précédente\r\nconst prevImage = () => {\r\n  // On met à jour l'index de l'image\r\n  setImageIndex((prevImageIndex) => {\r\n    // On calcule le nouvel index pour revenir à l'image précédente\r\n    const newIndex = (prevImageIndex - 1 + images.length) % images.length;\r\n    // On retourne le nouvel index\r\n    return newIndex;\r\n  });\r\n};\r\n\r\n// Composant pour afficher la note sous forme d'étoiles\r\nconst Rating = ({ rating }) => {\r\n  // Nombre total d'étoiles\r\n  const totalStars = 5;\r\n  // Tableau pour stocker les étoiles\r\n  let stars = [];\r\n\r\n  // Boucle pour générer les étoiles\r\n  for (let i = 0; i < totalStars; i++) {\r\n    // Si l'index est inférieur à la note, on ajoute une étoile remplie\r\n    if (i < rating) {\r\n      stars.push(\r\n        <FontAwesomeIcon className=\"star filled\" key={i} icon={fullStar} />\r\n      );\r\n    } else {\r\n      // Sinon, on ajoute une étoile grise\r\n      stars.push(\r\n        <FontAwesomeIcon className=\"star empty\" key={i} icon={emptyStar} />\r\n      );\r\n    }\r\n  }\r\n  // On retourne un div contenant toutes les étoiles\r\n  return <div className=\"rating\">{stars}</div>;\r\n};\r\n\r\n\r\n  // Rendu du composant\r\n  return (\r\n    <main>\r\n      <div className=\"slider\">\r\n        <img\r\n          className=\"slider_img\"\r\n          src={images[imageIndex]} \r\n          alt={Datas[index].title}\r\n        />\r\n             {images.length > 1 && (\r\n          <>\r\n            <FontAwesomeIcon\r\n              className=\"chevron chevron_left\"\r\n              icon={faChevronLeft}\r\n              onClick={prevImage}\r\n            />\r\n            <FontAwesomeIcon\r\n              className=\"chevron chevron_right\"\r\n              icon={faChevronRight}\r\n              onClick={nextImage}\r\n            />\r\n            <p id=\"number\">\r\n              {imageIndex + 1}/{images.length}\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"slider-container\">\r\n        <div className=\"slider-content-one\">\r\n          <div id=\"title\">\r\n            <h2>{Datas[index].title}</h2>\r\n          </div>\r\n          <p id=\"location\">{Datas[index].location}</p>\r\n          <div id=\"tag\">\r\n            {Datas[index].tags.map((tag, i) => (\r\n              <p id=\"tag_name\" key={i}>\r\n                {tag}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"slider-content-two\">\r\n          <div className=\"identity\">\r\n            <div className=\"host_name\">\r\n              {Datas[index].host.name.split(\" \").map((part, i) => (\r\n                <div key={i} className=\"host_name_part\">\r\n                  {part}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div id=\"rond\"></div>\r\n          </div>\r\n          <div className=\"rating\">\r\n            {\" \"}\r\n            <Rating rating={Datas[index].rating} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"collapse_slider\">\r\n        <div className=\"collapse_slider_item1\">\r\n          <Collapse title={\"Description\"} content={Datas[index].description} />\r\n        </div>\r\n        <div className=\"collapse_slider_item2\">\r\n          <Collapse title={\"Équipements\"} content={Datas[index].equipments} />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}